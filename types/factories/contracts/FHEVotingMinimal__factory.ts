/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEVotingMinimal,
  FHEVotingMinimalInterface,
} from "../../contracts/FHEVotingMinimal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasUserVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "externalEuint8",
        name: "encryptedVote",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50610b758061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061006f575f3560e01c80635eff1bb81161004d5780635eff1bb8146100d2578063da35c664146100e5578063dc296ae1146100f5575f80fd5b8063013cf08b14610073578063229acb171461009d57806349c2a1a6146100bd575b5f80fd5b6100866100813660046107ce565b610118565b604051610094929190610828565b60405180910390f35b6100b06100ab3660046107ce565b6101cf565b604051610094919061084b565b6100d06100cb3660046108a2565b6102c8565b005b6100d06100e03660046108e1565b610359565b5f54604051908152602001610094565b610108610103366004610930565b610567565b6040519015158152602001610094565b5f8181548110610126575f80fd5b905f5260205f2090600302015f91509050805f01805461014590610969565b80601f016020809104026020016040519081016040528092919081815260200182805461017190610969565b80156101bc5780601f10610193576101008083540402835291602001916101bc565b820191905f5260205f20905b81548152906001019060200180831161019f57829003601f168201915b5050506001909301549192505060ff1682565b5f54606090821061021a5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b60448201526064015b60405180910390fd5b5f828154811061022c5761022c6109a1565b905f5260205f2090600302015f01805461024590610969565b80601f016020809104026020016040519081016040528092919081815260200182805461027190610969565b80156102bc5780601f10610293576101008083540402835291602001916102bc565b820191905f5260205f20905b81548152906001019060200180831161029f57829003601f168201915b50505050509050919050565b5f8054600181018255908052600381027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180610306848683610a15565b506001818101805460ff1916909117905560405182907f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e4329061034b9087908790610acf565b60405180910390a250505050565b5f54841061039c5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610211565b5f84815481106103ae576103ae6109a1565b5f91825260209091206001600390920201015460ff166104105760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20646f6573206e6f742065786973740000000000000000006044820152606401610211565b5f8481548110610422576104226109a1565b5f91825260208083203384526002600390930201919091019052604090205460ff16156104915760405162461bcd60e51b815260206004820152600d60248201527f416c726561647920766f746564000000000000000000000000000000000000006044820152606401610211565b5f6104d18484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506105f092505050565b905060015f86815481106104e7576104e76109a1565b5f9182526020808320338085526003939093020160020190526040909120805460ff191692151592909217909155610520908290610604565b5061052a81610616565b5060405133815285907f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b9060200160405180910390a25050505050565b5f805483106105ab5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610211565b5f83815481106105bd576105bd6109a1565b5f91825260208083206001600160a01b03861684526002600390930201919091019052604090205460ff16905092915050565b5f6105fd83836002610625565b9392505050565b5f61060f8383610745565b5090919050565b5f6106218230610745565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b9061069e908890339089908990600401610afd565b6020604051808303815f875af11580156106ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106de9190610b51565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610727575f80fd5b505af1158015610739573d5f803e3d5ffd5b50505050509392505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156107b3575f80fd5b505af11580156107c5573d5f803e3d5ffd5b50505050505050565b5f602082840312156107de575f80fd5b5035919050565b5f81518084525f5b81811015610809576020818501810151868301820152016107ed565b505f602082860101526020601f19601f83011685010191505092915050565b604081525f61083a60408301856107e5565b905082151560208301529392505050565b602081525f6105fd60208301846107e5565b5f8083601f84011261086d575f80fd5b50813567ffffffffffffffff811115610884575f80fd5b60208301915083602082850101111561089b575f80fd5b9250929050565b5f80602083850312156108b3575f80fd5b823567ffffffffffffffff8111156108c9575f80fd5b6108d58582860161085d565b90969095509350505050565b5f805f80606085870312156108f4575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115610918575f80fd5b6109248782880161085d565b95989497509550505050565b5f8060408385031215610941575f80fd5b8235915060208301356001600160a01b038116811461095e575f80fd5b809150509250929050565b600181811c9082168061097d57607f821691505b60208210810361099b57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f821115610a1057805f5260205f20601f840160051c810160208510156109ee5750805b601f840160051c820191505b81811015610a0d575f81556001016109fa565b50505b505050565b67ffffffffffffffff831115610a2d57610a2d6109b5565b610a4183610a3b8354610969565b836109c9565b5f601f841160018114610a72575f8515610a5b5750838201355b5f19600387901b1c1916600186901b178355610a0d565b5f83815260208120601f198716915b82811015610aa15786850135825560209485019460019092019101610a81565b5086821015610abd575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b8481526001600160a01b0384166020820152608060408201525f610b2460808301856107e5565b905060548310610b4257634e487b7160e01b5f52602160045260245ffd5b82606083015295945050505050565b5f60208284031215610b61575f80fd5b505191905056fea164736f6c6343000818000a";

type FHEVotingMinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingMinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVotingMinimal__factory extends ContractFactory {
  constructor(...args: FHEVotingMinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEVotingMinimal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVotingMinimal__factory {
    return super.connect(runner) as FHEVotingMinimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingMinimalInterface {
    return new Interface(_abi) as FHEVotingMinimalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEVotingMinimal {
    return new Contract(address, _abi, runner) as unknown as FHEVotingMinimal;
  }
}
