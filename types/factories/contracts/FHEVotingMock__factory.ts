/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEVotingMock,
  FHEVotingMockInterface,
} from "../../contracts/FHEVotingMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "yesVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noVotes",
            type: "uint256",
          },
        ],
        internalType: "struct FHEVotingMock.ProposalInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalResults",
    outputs: [
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasUserVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isProposalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encryptedVote",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50610f418061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c80635bdcd008116100585780635bdcd00814610103578063bc903cb81461012b578063da35c6641461014b578063dc296ae11461015b575f80fd5b8063013cf08b14610089578063164b3d2f146100b857806322e2e12d146100db57806329356542146100f0575b5f80fd5b61009c610097366004610af2565b61016e565b6040516100af9796959493929190610b4c565b60405180910390f35b6100cb6100c6366004610af2565b610247565b60405190151581526020016100af565b6100ee6100e9366004610bd4565b6102e4565b005b6100ee6100fe366004610c21565b610497565b610116610111366004610af2565b610848565b604080519283526020830191909152016100af565b61013e610139366004610af2565b6108c3565b6040516100af9190610c95565b5f546040519081526020016100af565b6100cb610169366004610d09565b610a5c565b5f818154811061017c575f80fd5b905f5260205f2090600802015f91509050805f01805461019b90610d4f565b80601f01602080910402602001604051908101604052809291908181526020018280546101c790610d4f565b80156102125780601f106101e957610100808354040283529160200191610212565b820191905f5260205f20905b8154815290600101906020018083116101f557829003601f168201915b5050505060018301546003840154600485015460058601546006870154600790970154959660ff948516969395509193169187565b5f805482106102905760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b60448201526064015b60405180910390fd5b5f8083815481106102a3576102a3610d87565b5f9182526020909120600890910201600581015490915060ff1680156102cd575080600301544210155b80156102dd575080600401544211155b9392505050565b826103315760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610287565b4282116103805760405162461bcd60e51b815260206004820181905260248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152606401610287565b8181116103d95760405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608401610287565b5f8054600181018255908052600881027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180610417868883610dfb565b506001818101805460ff199081168317909155600383018690556004830185905560058301805490911690911790555f60068201819055600782015560405182907f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432906104879089908990610eb5565b60405180910390a2505050505050565b5f5485106104da5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610287565b5f85815481106104ec576104ec610d87565b5f91825260209091206001600890920201015460ff1661054e5760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20646f6573206e6f742065786973740000000000000000006044820152606401610287565b5f858154811061056057610560610d87565b5f91825260209091206005600890920201015460ff166105c25760405162461bcd60e51b815260206004820152601660248201527f50726f706f73616c206973206e6f7420616374697665000000000000000000006044820152606401610287565b5f85815481106105d4576105d4610d87565b905f5260205f209060080201600301544210156106335760405162461bcd60e51b815260206004820152601660248201527f566f74696e6720686173206e6f742073746172746564000000000000000000006044820152606401610287565b5f858154811061064557610645610d87565b905f5260205f209060080201600401544211156106a45760405162461bcd60e51b815260206004820152601060248201527f566f74696e672068617320656e646564000000000000000000000000000000006044820152606401610287565b5f85815481106106b6576106b6610d87565b5f91825260208083203384526002600890930201919091019052604090205460ff16156107255760405162461bcd60e51b815260206004820152600d60248201527f416c726561647920766f746564000000000000000000000000000000000000006044820152606401610287565b5f831561075a57600285855f81811061074057610740610d87565b6107519392013560f81c9050610ee3565b60ff1660011490505b60015f878154811061076e5761076e610d87565b5f9182526020808320338452600892909202909101600201905260409020805460ff191691151591909117905580156107da575f86815481106107b3576107b3610d87565b5f918252602082206006600890920201018054916107d083610f10565b919050555061080f565b5f86815481106107ec576107ec610d87565b5f9182526020822060076008909202010180549161080983610f10565b91905055505b60408051338152821515602082015287917ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f9101610487565b5f80548190831061088e5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610287565b5f8084815481106108a1576108a1610d87565b905f5260205f2090600802019050806006015481600701549250925050915091565b6109086040518061010001604052805f8152602001606081526020015f151581526020015f81526020015f81526020015f151581526020015f81526020015f81525090565b5f54821061094b5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610287565b5f80838154811061095e5761095e610d87565b905f5260205f2090600802019050604051806101000160405280848152602001825f01805461098c90610d4f565b80601f01602080910402602001604051908101604052809291908181526020018280546109b890610d4f565b8015610a035780601f106109da57610100808354040283529160200191610a03565b820191905f5260205f20905b8154815290600101906020018083116109e657829003601f168201915b5050509183525050600183015460ff90811615156020830152600384015460408301526004840154606083015260058401541615156080820152600683015460a082015260079092015460c09092019190915292915050565b5f80548310610aa05760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610287565b5f8381548110610ab257610ab2610d87565b5f918252602080832073ffffffffffffffffffffffffffffffffffffffff861684526002600890930201919091019052604090205460ff16905092915050565b5f60208284031215610b02575f80fd5b5035919050565b5f81518084525f5b81811015610b2d57602081850181015186830182015201610b11565b505f602082860101526020601f19601f83011685010191505092915050565b60e081525f610b5e60e083018a610b09565b97151560208301525060408101959095526060850193909352901515608084015260a083015260c090910152919050565b5f8083601f840112610b9f575f80fd5b50813567ffffffffffffffff811115610bb6575f80fd5b602083019150836020828501011115610bcd575f80fd5b9250929050565b5f805f8060608587031215610be7575f80fd5b843567ffffffffffffffff811115610bfd575f80fd5b610c0987828801610b8f565b90989097506020870135966040013595509350505050565b5f805f805f60608688031215610c35575f80fd5b85359450602086013567ffffffffffffffff80821115610c53575f80fd5b610c5f89838a01610b8f565b90965094506040880135915080821115610c77575f80fd5b50610c8488828901610b8f565b969995985093965092949392505050565b60208152815160208201525f6020830151610100806040850152610cbd610120850183610b09565b915060408501511515606085015260608501516080850152608085015160a085015260a0850151151560c085015260c085015160e085015260e085015181850152508091505092915050565b5f8060408385031215610d1a575f80fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610d44575f80fd5b809150509250929050565b600181811c90821680610d6357607f821691505b602082108103610d8157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f821115610df657805f5260205f20601f840160051c81016020851015610dd45750805b601f840160051c820191505b81811015610df3575f8155600101610de0565b50505b505050565b67ffffffffffffffff831115610e1357610e13610d9b565b610e2783610e218354610d4f565b83610daf565b5f601f841160018114610e58575f8515610e415750838201355b5f19600387901b1c1916600186901b178355610df3565b5f83815260208120601f198716915b82811015610e875786850135825560209485019460019092019101610e67565b5086821015610ea3575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f60ff831680610f0157634e487b7160e01b5f52601260045260245ffd5b8060ff84160691505092915050565b5f60018201610f2d57634e487b7160e01b5f52601160045260245ffd5b506001019056fea164736f6c6343000818000a";

type FHEVotingMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVotingMock__factory extends ContractFactory {
  constructor(...args: FHEVotingMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEVotingMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVotingMock__factory {
    return super.connect(runner) as FHEVotingMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingMockInterface {
    return new Interface(_abi) as FHEVotingMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEVotingMock {
    return new Contract(address, _abi, runner) as unknown as FHEVotingMock;
  }
}
