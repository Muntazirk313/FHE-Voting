/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleVoting,
  SimpleVotingInterface,
} from "../../contracts/SimpleVoting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionAVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionBVotes",
        type: "uint256",
      },
    ],
    name: "ProposalEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "option",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "endProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionAVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionBVotes",
            type: "uint256",
          },
        ],
        internalType: "struct SimpleVoting.ProposalInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionAVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionBVotes",
            type: "uint256",
          },
        ],
        internalType: "struct SimpleVoting.ProposalInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVoteOption",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isProposalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionAVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionBVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "option",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506114dd8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c8063970601d81161007d578063c08cc02d11610058578063c08cc02d146101af578063cceb68f5146101c0578063da35c664146101d5575f80fd5b8063970601d814610157578063a07bd4001461017c578063bc903cb81461018f575f80fd5b806343859632116100ad578063438596321461011c5780636b5e17661461012f578063943e821614610144575f80fd5b8063013cf08b146100c8578063164b3d2f146100f9575b5f80fd5b6100db6100d6366004610fdf565b6101dd565b6040516100f099989796959493929190611039565b60405180910390f35b61010c610107366004610fdf565b610335565b60405190151581526020016100f0565b61010c61012a36600461109b565b6103cc565b61014261013d36600461117e565b61045c565b005b6101426101523660046111ed565b610661565b61016a61016536600461109b565b61094a565b60405160ff90911681526020016100f0565b61014261018a366004610fdf565b6109d9565b6101a261019d366004610fdf565b610b40565b6040516100f091906112a0565b5f545b6040519081526020016100f0565b6101c8610d6f565b6040516100f091906112b9565b6101b25f5481565b600160208190525f9182526040909120805491810180546101fd9061131b565b80601f01602080910402602001604051908101604052809291908181526020018280546102299061131b565b80156102745780601f1061024b57610100808354040283529160200191610274565b820191905f5260205f20905b81548152906001019060200180831161025757829003601f168201915b5050505050908060020180546102899061131b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b59061131b565b80156103005780601f106102d757610100808354040283529160200191610300565b820191905f5260205f20905b8154815290600101906020018083116102e357829003601f168201915b505050600384015460048501546005860154600687015460078801546008909801549697939692955060ff9091169350919089565b5f808211801561034657505f548211155b61038d5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b60448201526064015b60405180910390fd5b5f8281526001602052604090206005810154429060ff1680156103b4575081600301548110155b80156103c4575081600401548111155b949350505050565b5f80831180156103dd57505f548311155b61041f5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606401610384565b505f82815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845260090190915290205460ff165b92915050565b5f8451116104ac5760405162461bcd60e51b815260206004820152601560248201527f5469746c652063616e6e6f7420626520656d70747900000000000000000000006044820152606401610384565b5f8351116104fc5760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610384565b42821161054b5760405162461bcd60e51b815260206004820181905260248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152606401610384565b8181116105a45760405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608401610384565b5f805490806105b283611361565b90915550505f8054808252600160208190526040909220818155909181016105da87826113c5565b50600281016105e986826113c5565b50600381018490556004810183905560058101805460ff191660011790555f6006820181905560078201819055600882015560405182907f5d072faeaf3fe9518eca824577834e1efc3ff209025796dd8819b72706cd0bd59061065190899088908890611485565b60405180910390a2505050505050565b5f8211801561067157505f548211155b6106b35760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606401610384565b8060ff16600114806106c857508060ff166002145b6107145760405162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206f7074696f6e20286d7573742062652031206f72203229006044820152606401610384565b5f828152600160205260409020600581015460ff166107755760405162461bcd60e51b815260206004820152601660248201527f50726f706f73616c206973206e6f7420616374697665000000000000000000006044820152606401610384565b80600301544210156107c95760405162461bcd60e51b815260206004820152601a60248201527f566f74696e6720686173206e6f742073746172746564207965740000000000006044820152606401610384565b806004015442111561081d5760405162461bcd60e51b815260206004820152601060248201527f566f74696e672068617320656e646564000000000000000000000000000000006044820152606401610384565b335f90815260098201602052604090205460ff161561087e5760405162461bcd60e51b815260206004820152601e60248201527f416c726561647920766f746564206f6e20746869732070726f706f73616c00006044820152606401610384565b335f90815260098201602090815260408083208054600160ff1991821617909155600a85019092528220805490911660ff8516179055600682018054916108c483611361565b91905055508160ff166001036108ef57600781018054905f6108e583611361565b9190505550610906565b600881018054905f61090083611361565b91905055505b6040805160ff84168152426020820152339185917fb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d906792910160405180910390a3505050565b5f808311801561095b57505f548311155b61099d5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606401610384565b505f82815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452600a0190915290205460ff1692915050565b5f811180156109e957505f548111155b610a2b5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606401610384565b5f818152600160205260409020600581015460ff16610a8c5760405162461bcd60e51b815260206004820152601c60248201527f50726f706f73616c20697320616c726561647920696e616374697665000000006044820152606401610384565b80600401544211610adf5760405162461bcd60e51b815260206004820152601f60248201527f566f74696e6720706572696f6420686173206e6f7420656e64656420796574006044820152606401610384565b60058101805460ff191690556006810154600782015460088301546040805193845260208401929092529082015282907fef954cc7953c1767aa2aae91a1028db9581a6c263f206d501c1c9b44a210da439060600160405180910390a25050565b610b8a6040518061012001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581526020015f81526020015f81526020015f81525090565b5f82118015610b9a57505f548211155b610bdc5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606401610384565b5f60015f8481526020019081526020015f209050604051806101200160405280825f01548152602001826001018054610c149061131b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c409061131b565b8015610c8b5780601f10610c6257610100808354040283529160200191610c8b565b820191905f5260205f20905b815481529060010190602001808311610c6e57829003601f168201915b50505050508152602001826002018054610ca49061131b565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd09061131b565b8015610d1b5780601f10610cf257610100808354040283529160200191610d1b565b820191905f5260205f20905b815481529060010190602001808311610cfe57829003601f168201915b50505091835250506003830154602082015260048301546040820152600583015460ff161515606082015260068301546080820152600783015460a082015260089092015460c09092019190915292915050565b60605f805467ffffffffffffffff811115610d8c57610d8c6110e1565b604051908082528060200260200182016040528015610e0757816020015b610df46040518061012001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581526020015f81526020015f81526020015f81525090565b815260200190600190039081610daa5790505b50905060015b5f548111610fd9575f60015f8381526020019081526020015f209050604051806101200160405280825f01548152602001826001018054610e4d9061131b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e799061131b565b8015610ec45780601f10610e9b57610100808354040283529160200191610ec4565b820191905f5260205f20905b815481529060010190602001808311610ea757829003601f168201915b50505050508152602001826002018054610edd9061131b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f099061131b565b8015610f545780601f10610f2b57610100808354040283529160200191610f54565b820191905f5260205f20905b815481529060010190602001808311610f3757829003601f168201915b50505091835250506003830154602082015260048301546040820152600583015460ff161515606082015260068301546080820152600783015460a0820152600883015460c09091015283610faa6001856114a9565b81518110610fba57610fba6114bc565b6020026020010181905250508080610fd190611361565b915050610e0d565b50919050565b5f60208284031215610fef575f80fd5b5035919050565b5f81518084525f5b8181101561101a57602081850181015186830182015201610ffe565b505f602082860101526020601f19601f83011685010191505092915050565b5f6101208b83528060208401526110528184018c610ff6565b90508281036040840152611066818b610ff6565b60608401999099525050608081019590955292151560a085015260c084019190915260e0830152610100909101529392505050565b5f80604083850312156110ac575f80fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff811681146110d6575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611104575f80fd5b813567ffffffffffffffff8082111561111f5761111f6110e1565b604051601f8301601f19908116603f01168101908282118183101715611147576111476110e1565b8160405283815286602085880101111561115f575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215611191575f80fd5b843567ffffffffffffffff808211156111a8575f80fd5b6111b4888389016110f5565b955060208701359150808211156111c9575f80fd5b506111d6878288016110f5565b949794965050505060408301359260600135919050565b5f80604083850312156111fe575f80fd5b82359150602083013560ff811681146110d6575f80fd5b5f61012082518452602083015181602086015261123482860182610ff6565b9150506040830151848203604086015261124e8282610ff6565b915050606083015160608501526080830151608085015260a083015161127860a086018215159052565b5060c0838101519085015260e080840151908501526101009283015192909301919091525090565b602081525f6112b26020830184611215565b9392505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561130e57603f198886030184526112fc858351611215565b945092850192908501906001016112e0565b5092979650505050505050565b600181811c9082168061132f57607f821691505b602082108103610fd957634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016113725761137261134d565b5060010190565b601f8211156113c057805f5260205f20601f840160051c8101602085101561139e5750805b601f840160051c820191505b818110156113bd575f81556001016113aa565b50505b505050565b815167ffffffffffffffff8111156113df576113df6110e1565b6113f3816113ed845461131b565b84611379565b602080601f831160018114611426575f841561140f5750858301515b5f19600386901b1c1916600185901b17855561147d565b5f85815260208120601f198616915b8281101561145457888601518255948401946001909101908401611435565b508582101561147157878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b606081525f6114976060830186610ff6565b60208301949094525060400152919050565b818103818111156104565761045661134d565b634e487b7160e01b5f52603260045260245ffdfea164736f6c6343000818000a";

type SimpleVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleVoting__factory extends ContractFactory {
  constructor(...args: SimpleVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleVoting__factory {
    return super.connect(runner) as SimpleVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleVotingInterface {
    return new Interface(_abi) as SimpleVotingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleVoting {
    return new Contract(address, _abi, runner) as unknown as SimpleVoting;
  }
}
