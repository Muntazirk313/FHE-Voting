/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FHEVoting, FHEVotingInterface } from "../../contracts/FHEVoting";

const _abi = [
  {
    inputs: [],
    name: "AlreadyVoted",
    type: "error",
  },
  {
    inputs: [],
    name: "FHEPermissionDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVoteOption",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingNotStarted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionAVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionBVotes",
        type: "uint256",
      },
    ],
    name: "ProposalEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "endProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct FHEVoting.ProposalInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getEncryptedVote",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getEncryptedVoteCounts",
    outputs: [
      {
        internalType: "euint32",
        name: "totalVotes",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "optionAVotes",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "optionBVotes",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct FHEVoting.ProposalInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isProposalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isProposalCreator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "euint32",
        name: "totalVotes",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "optionAVotes",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "optionBVotes",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "encryptedVote",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c28812179055611a82806101dc5f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c8063a07bd40011610088578063c08cc02d11610063578063c08cc02d1461023a578063cceb68f514610241578063da35c66414610256578063de3007331461025e575f80fd5b8063a07bd400146101c7578063ac78961b146101da578063bc903cb81461021a575f80fd5b806343859632116100c3578063438596321461016b57806354bff2da1461017e5780635eff1bb81461019f5780636b5e1766146101b4575f80fd5b8063013cf08b146100e9578063164b3d2f1461011a57806319ec07911461013d575b5f80fd5b6100fc6100f73660046114ed565b610271565b60405161011199989796959493929190611547565b60405180910390f35b61012d6101283660046114ed565b6103c9565b6040519015158152602001610111565b61015061014b3660046114ed565b610434565b60408051938452602084019290925290820152606001610111565b61012d6101793660046115a9565b610486565b61019161018c3660046115a9565b6104e2565b604051908152602001610111565b6101b26101ad3660046115e2565b61057f565b005b6101b26101c23660046116f8565b6107c8565b6101b26101d53660046114ed565b610a1d565b6102026101e83660046114ed565b60026020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610111565b61022d6102283660046114ed565b610b26565b60405161011191906117cb565b5f54610191565b610249610cfc565b60405161011191906117dd565b6101915f5481565b61012d61026c3660046115a9565b610f3a565b600160208190525f9182526040909120805491810180546102919061183f565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd9061183f565b80156103085780601f106102df57610100808354040283529160200191610308565b820191905f5260205f20905b8154815290600101906020018083116102eb57829003601f168201915b50505050509080600201805461031d9061183f565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061183f565b80156103945780601f1061036b57610100808354040283529160200191610394565b820191905f5260205f20905b81548152906001019060200180831161037757829003601f168201915b505050600384015460048501546005860154600687015460078801546008909801549697939692955060ff9091169350919089565b5f8115806103d757505f5482115b156103f557604051631dc0650160e31b815260040160405180910390fd5b5f8281526001602052604090206005810154429060ff16801561041c575081600301548110155b801561042c575081600401548111155b949350505050565b5f808083158061044457505f5484115b1561046257604051631dc0650160e31b815260040160405180910390fd5b5050505f908152600160205260409020600681015460078201546008909201549092565b5f82158061049457505f5483115b156104b257604051631dc0650160e31b815260040160405180910390fd5b505f8281526001602090815260408083206001600160a01b038516845260090190915290205460ff165b92915050565b5f8215806104f057505f5483115b1561050e57604051631dc0650160e31b815260040160405180910390fd5b5f8381526001602090815260408083206001600160a01b038616845260090190915290205460ff1661055357604051631dc0650160e31b815260040160405180910390fd5b505f8281526001602090815260408083206001600160a01b0385168452600a0190915290205492915050565b83158061058c57505f5484115b156105aa57604051631dc0650160e31b815260040160405180910390fd5b5f848152600160205260409020600581015460ff166105dc57604051637becc13f60e01b815260040160405180910390fd5b335f90815260098201602052604090205460ff161561060e57604051637c9a1cf960e01b815260040160405180910390fd5b806003015442101561063357604051633fd0090160e11b815260040160405180910390fd5b806004015442111561065857604051637a19ed0560e01b815260040160405180910390fd5b5f6106988585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610f8792505050565b90505f6106a45f610f9b565b90505f6106b16001610f9b565b335f818152600a870160209081526040808320889055600989019091529020805460ff191660011790559091506106e9908490610fad565b506106f383610fbf565b50610702846006015482610fce565b6006850181905561071290610fbf565b505f6107286107218585610ffc565b838561102a565b90505f61073f6107388685610ffc565b848661102a565b905061074f866007015483610fce565b600787015560088601546107639082610fce565b6008870155600786015461077690610fbf565b506107848660080154610fbf565b5060405142815233908b907f2acce567deca3aabf56327adbb4524bd5318936eaefa69e3a5208ffda0cfec099060200160405180910390a350505050505050505050565b5f84511161081d5760405162461bcd60e51b815260206004820152601560248201527f5469746c652063616e6e6f7420626520656d707479000000000000000000000060448201526064015b60405180910390fd5b5f83511161086d5760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610814565b4282116108bc5760405162461bcd60e51b815260206004820181905260248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152606401610814565b8181116109155760405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608401610814565b5f8054908061092383611885565b90915550505f80548082526001602081905260409092208181559091810161094b87826118e9565b506002810161095a86826118e9565b50600381018490556004810183905560058101805460ff191660011790556109815f610f9b565b600682015561098f5f610f9b565b600782015561099d5f610f9b565b60088201555f828152600260205260409081902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790555182907f5d072faeaf3fe9518eca824577834e1efc3ff209025796dd8819b72706cd0bd590610a0d908990889088906119a9565b60405180910390a2505050505050565b801580610a2a57505f5481115b15610a4857604051631dc0650160e31b815260040160405180910390fd5b5f818152600260205260409020546001600160a01b03163314610a7e57604051636c71093560e01b815260040160405180910390fd5b5f818152600160205260409020600581015460ff16610ab057604051637becc13f60e01b815260040160405180910390fd5b80600401544211610ad457604051637becc13f60e01b815260040160405180910390fd5b60058101805460ff19169055604080515f8082526020820181905281830152905183917fef954cc7953c1767aa2aae91a1028db9581a6c263f206d501c1c9b44a210da43919081900360600190a25050565b610b5d6040518060c001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581525090565b811580610b6a57505f5482115b15610b8857604051631dc0650160e31b815260040160405180910390fd5b5f60015f8481526020019081526020015f2090506040518060c00160405280825f01548152602001826001018054610bbf9061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610beb9061183f565b8015610c365780601f10610c0d57610100808354040283529160200191610c36565b820191905f5260205f20905b815481529060010190602001808311610c1957829003601f168201915b50505050508152602001826002018054610c4f9061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7b9061183f565b8015610cc65780601f10610c9d57610100808354040283529160200191610cc6565b820191905f5260205f20905b815481529060010190602001808311610ca957829003601f168201915b5050509183525050600383015460208201526004830154604082015260059092015460ff16151560609092019190915292915050565b60605f805467ffffffffffffffff811115610d1957610d1961165b565b604051908082528060200260200182016040528015610d8157816020015b610d6e6040518060c001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581525090565b815260200190600190039081610d375790505b50905060015b5f548111610f34575f60015f8381526020019081526020015f2090506040518060c00160405280825f01548152602001826001018054610dc69061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610df29061183f565b8015610e3d5780601f10610e1457610100808354040283529160200191610e3d565b820191905f5260205f20905b815481529060010190602001808311610e2057829003601f168201915b50505050508152602001826002018054610e569061183f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e829061183f565b8015610ecd5780601f10610ea457610100808354040283529160200191610ecd565b820191905f5260205f20905b815481529060010190602001808311610eb057829003601f168201915b50505091835250506003830154602082015260048301546040820152600583015460ff16151560609091015283610f056001856119cd565b81518110610f1557610f156119e0565b6020026020010181905250508080610f2c90611885565b915050610d87565b50919050565b5f821580610f4857505f5483115b15610f6657604051631dc0650160e31b815260040160405180910390fd5b505f91825260026020526040909120546001600160a01b0391821691161490565b5f610f9483836004611036565b9392505050565b5f6104dc8263ffffffff166004611156565b5f610fb8838361120b565b5090919050565b5f610fca823061120b565b5090565b5f82610fe057610fdd5f610f9b565b92505b81610ff157610fee5f610f9b565b91505b610f9483835f611294565b5f8261100e5761100b5f610f9b565b92505b8161101f5761101c5f610f9b565b91505b610f9483835f61138f565b5f61042c848484611444565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b906110af908890339089908990600401611a14565b6020604051808303815f875af11580156110cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ef9190611a4a565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611138575f80fd5b505af115801561114a573d5f803e3d5ffd5b50505050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb906111cb9087908790600401611a61565b6020604051808303815f875af11580156111e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042c9190611a4a565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015611279575f80fd5b505af115801561128b573d5f803e3d5ffd5b50505050505050565b5f8082156112a75750600160f81b6112aa565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015611361573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113859190611a4a565b9695505050505050565b5f8082156113a25750600160f81b6113a5565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163f77f3f1d60e01b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063f77f3f1d90606401611345565b5f807fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6006001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af11580156114c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114e49190611a4a565b95945050505050565b5f602082840312156114fd575f80fd5b5035919050565b5f81518084525f5b818110156115285760208185018101518683018201520161150c565b505f602082860101526020601f19601f83011685010191505092915050565b5f6101208b83528060208401526115608184018c611504565b90508281036040840152611574818b611504565b60608401999099525050608081019590955292151560a085015260c084019190915260e0830152610100909101529392505050565b5f80604083850312156115ba575f80fd5b8235915060208301356001600160a01b03811681146115d7575f80fd5b809150509250929050565b5f805f80606085870312156115f5575f80fd5b8435935060208501359250604085013567ffffffffffffffff8082111561161a575f80fd5b818701915087601f83011261162d575f80fd5b81358181111561163b575f80fd5b88602082850101111561164c575f80fd5b95989497505060200194505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261167e575f80fd5b813567ffffffffffffffff808211156116995761169961165b565b604051601f8301601f19908116603f011681019082821181831017156116c1576116c161165b565b816040528381528660208588010111156116d9575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f806080858703121561170b575f80fd5b843567ffffffffffffffff80821115611722575f80fd5b61172e8883890161166f565b95506020870135915080821115611743575f80fd5b506117508782880161166f565b949794965050505060408301359260600135919050565b805182525f602082015160c0602085015261178560c0850182611504565b90506040830151848203604086015261179e8282611504565b915050606083015160608501526080830151608085015260a0830151151560a08501528091505092915050565b602081525f610f946020830184611767565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561183257603f19888603018452611820858351611767565b94509285019290850190600101611804565b5092979650505050505050565b600181811c9082168061185357607f821691505b602082108103610f3457634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161189657611896611871565b5060010190565b601f8211156118e457805f5260205f20601f840160051c810160208510156118c25750805b601f840160051c820191505b818110156118e1575f81556001016118ce565b50505b505050565b815167ffffffffffffffff8111156119035761190361165b565b61191781611911845461183f565b8461189d565b602080601f83116001811461194a575f84156119335750858301515b5f19600386901b1c1916600185901b1785556119a1565b5f85815260208120601f198616915b8281101561197857888601518255948401946001909101908401611959565b508582101561199557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b606081525f6119bb6060830186611504565b60208301949094525060400152919050565b818103818111156104dc576104dc611871565b634e487b7160e01b5f52603260045260245ffd5b60548110611a1057634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611a3b6080830185611504565b90506114e460608301846119f4565b5f60208284031215611a5a575f80fd5b5051919050565b82815260408101610f9460208301846119f456fea164736f6c6343000818000a";

type FHEVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVoting__factory extends ContractFactory {
  constructor(...args: FHEVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVoting__factory {
    return super.connect(runner) as FHEVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingInterface {
    return new Interface(_abi) as FHEVotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHEVoting {
    return new Contract(address, _abi, runner) as unknown as FHEVoting;
  }
}
