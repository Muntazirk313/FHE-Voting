/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEVotingSepolia,
  FHEVotingSepoliaInterface,
} from "../../contracts/FHEVotingSepolia";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct FHEVotingSepolia.ProposalInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasUserVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isProposalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "externalEuint8",
        name: "encryptedVote",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50610f9b8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c80635eff1bb8116100585780635eff1bb8146100e3578063bc903cb8146100f6578063da35c66414610116578063dc296ae114610126575f80fd5b8063013cf08b1461007e578063164b3d2f146100ab57806322e2e12d146100ce575b5f80fd5b61009161008c366004610b86565b610139565b6040516100a2959493929190610be0565b60405180910390f35b6100be6100b9366004610b86565b610206565b60405190151581526020016100a2565b6100e16100dc366004610c5d565b6102a3565b005b6100e16100f1366004610caa565b610449565b610109610104366004610b86565b6107ad565b6040516100a29190610cf9565b5f546040519081526020016100a2565b6100be610134366004610d56565b610926565b5f8181548110610147575f80fd5b905f5260205f2090600602015f91509050805f01805461016690610d8f565b80601f016020809104026020016040519081016040528092919081815260200182805461019290610d8f565b80156101dd5780601f106101b4576101008083540402835291602001916101dd565b820191905f5260205f20905b8154815290600101906020018083116101c057829003601f168201915b505050600184015460038501546004860154600590960154949560ff9283169591945092501685565b5f8054821061024f5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b60448201526064015b60405180910390fd5b5f80838154811061026257610262610dc7565b5f9182526020909120600690910201600581015490915060ff16801561028c575080600301544210155b801561029c575080600401544211155b9392505050565b826102f05760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606401610246565b42821161033f5760405162461bcd60e51b815260206004820181905260248201527f53746172742074696d65206d75737420626520696e20746865206675747572656044820152606401610246565b8181116103985760405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608401610246565b5f8054600181018255908052600681027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301806103d6868883610e3b565b506001818101805460ff1990811683179091556003830186905560048301859055600583018054909116909117905560405182907f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432906104399089908990610ef5565b60405180910390a2505050505050565b5f54841061048c5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610246565b5f848154811061049e5761049e610dc7565b5f91825260209091206001600690920201015460ff166105005760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20646f6573206e6f742065786973740000000000000000006044820152606401610246565b5f848154811061051257610512610dc7565b5f91825260209091206005600690920201015460ff166105745760405162461bcd60e51b815260206004820152601660248201527f50726f706f73616c206973206e6f7420616374697665000000000000000000006044820152606401610246565b5f848154811061058657610586610dc7565b905f5260205f209060060201600301544210156105e55760405162461bcd60e51b815260206004820152601660248201527f566f74696e6720686173206e6f742073746172746564000000000000000000006044820152606401610246565b5f84815481106105f7576105f7610dc7565b905f5260205f209060060201600401544211156106565760405162461bcd60e51b815260206004820152601060248201527f566f74696e672068617320656e646564000000000000000000000000000000006044820152606401610246565b5f848154811061066857610668610dc7565b5f91825260208083203384526002600690930201919091019052604090205460ff16156106d75760405162461bcd60e51b815260206004820152600d60248201527f416c726561647920766f746564000000000000000000000000000000000000006044820152606401610246565b5f6107178484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506109af92505050565b905060015f868154811061072d5761072d610dc7565b5f9182526020808320338085526006939093020160020190526040909120805460ff1916921515929092179091556107669082906109bc565b50610770816109ce565b5060405133815285907f030b0f8dcd86a031eddb071f91882edeac8173663ba775713b677b42b51be44b9060200160405180910390a25050505050565b6107e56040518060c001604052805f8152602001606081526020015f151581526020015f81526020015f81526020015f151581525090565b5f5482106108285760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610246565b5f80838154811061083b5761083b610dc7565b905f5260205f20906006020190506040518060c00160405280848152602001825f01805461086890610d8f565b80601f016020809104026020016040519081016040528092919081815260200182805461089490610d8f565b80156108df5780601f106108b6576101008083540402835291602001916108df565b820191905f5260205f20905b8154815290600101906020018083116108c257829003601f168201915b5050509183525050600183015460ff908116151560208301526003840154604083015260048401546060830152600590930154909216151560809092019190915292915050565b5f8054831061096a5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c1c9bdc1bdcd85b60821b6044820152606401610246565b5f838154811061097c5761097c610dc7565b5f91825260208083206001600160a01b03861684526002600690930201919091019052604090205460ff16905092915050565b5f61029c838360026109dd565b5f6109c78383610afd565b5090919050565b5f6109d98230610afd565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b90610a56908890339089908990600401610f23565b6020604051808303815f875af1158015610a72573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a969190610f77565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610adf575f80fd5b505af1158015610af1573d5f803e3d5ffd5b50505050509392505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610b6b575f80fd5b505af1158015610b7d573d5f803e3d5ffd5b50505050505050565b5f60208284031215610b96575f80fd5b5035919050565b5f81518084525f5b81811015610bc157602081850181015186830182015201610ba5565b505f602082860101526020601f19601f83011685010191505092915050565b60a081525f610bf260a0830188610b9d565b951515602083015250604081019390935260608301919091521515608090910152919050565b5f8083601f840112610c28575f80fd5b50813567ffffffffffffffff811115610c3f575f80fd5b602083019150836020828501011115610c56575f80fd5b9250929050565b5f805f8060608587031215610c70575f80fd5b843567ffffffffffffffff811115610c86575f80fd5b610c9287828801610c18565b90989097506020870135966040013595509350505050565b5f805f8060608587031215610cbd575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115610ce1575f80fd5b610ced87828801610c18565b95989497509550505050565b60208152815160208201525f602083015160c06040840152610d1e60e0840182610b9d565b905060408401511515606084015260608401516080840152608084015160a084015260a0840151151560c08401528091505092915050565b5f8060408385031215610d67575f80fd5b8235915060208301356001600160a01b0381168114610d84575f80fd5b809150509250929050565b600181811c90821680610da357607f821691505b602082108103610dc157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f821115610e3657805f5260205f20601f840160051c81016020851015610e145750805b601f840160051c820191505b81811015610e33575f8155600101610e20565b50505b505050565b67ffffffffffffffff831115610e5357610e53610ddb565b610e6783610e618354610d8f565b83610def565b5f601f841160018114610e98575f8515610e815750838201355b5f19600387901b1c1916600186901b178355610e33565b5f83815260208120601f198716915b82811015610ec75786850135825560209485019460019092019101610ea7565b5086821015610ee3575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b8481526001600160a01b0384166020820152608060408201525f610f4a6080830185610b9d565b905060548310610f6857634e487b7160e01b5f52602160045260245ffd5b82606083015295945050505050565b5f60208284031215610f87575f80fd5b505191905056fea164736f6c6343000818000a";

type FHEVotingSepoliaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingSepoliaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVotingSepolia__factory extends ContractFactory {
  constructor(...args: FHEVotingSepoliaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEVotingSepolia & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVotingSepolia__factory {
    return super.connect(runner) as FHEVotingSepolia__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingSepoliaInterface {
    return new Interface(_abi) as FHEVotingSepoliaInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEVotingSepolia {
    return new Contract(address, _abi, runner) as unknown as FHEVotingSepolia;
  }
}
