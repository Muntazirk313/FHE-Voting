import { FhevmCoprocessorContractName, FhevmDecryptionOracleContractName } from "@fhevm/mock-utils";
export declare class FhevmEnvironmentPaths {
    private _root;
    constructor(root: string);
    /**
     * Returns `/path/to/user-package` (eq: hre.config.paths.root)
     */
    get root(): string;
    /**
     * Returns `/path/to/user-package/node_modules`
     */
    get nodeModules(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp`
     */
    get cache(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/precompiled-fhevm-core-contracts-addresses.json`
     */
    get cachePrecompiledFhevmCoreContractsAddressesJson(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/@fhevm/solidity/config`
     */
    get cacheFhevmSolidityConfig(): string;
    /**
     * Returns:
     * - Unix: `fhevmTemp/@fhevm/solidity/config`
     * - Windows: `fhevmTemp\@fhevm\solidity\config`
     */
    get relCacheFhevmSolidityConfig(): string;
    /**
     * Returns `fhevmTemp/@fhevm/solidity/config` (in Unix format)
     */
    get relCacheFhevmSolidityConfigUnix(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/@fhevm/solidity/config/ZamaConfig.sol`
     */
    get cacheFHEVMConfigSol(): string;
    /**
     * Returns `/path/to/user-package/node_modules/@fhevm/solidity`
     * This is legit since the user-package must have @fhevm/solidity in its dependencies.
     */
    get fhevmSolidity(): string;
    /**
     * Returns `/path/to/user-package/node_modules/solidity-coverage`
     */
    get solidityCoverage(): string | undefined;
    /**
     * Returns `/path/to/user-package/node_modules/mock-utils`
     */
    get mockUtils(): string | undefined;
    /**
     * Returns `/path/to/user-package/node_modules/@fhevm/solidity/config`
     */
    get fhevmSolidityConfig(): string;
    /**
     * Returns `/path/to/user-package/node_modules/@fhevm/solidity/config/ZamaConfig.sol`
     */
    get fhevmSolidityConfigFile(): string;
    /**
     * Returns `/path/to/user-package/node_modules/@fhevm/solidity/lib`
     */
    get fhevmSolidityLib(): string;
    /**
     * If using npm:
     * - Returns `/path/to/user-package/node_modules/@zama-fhe/oracle-solidity`
     * If using pnpm (strict no hoist):
     * - Returns `/path/to/user-package/node_modules/.pnpm/@zama-fhe+oracle-solidity@...@...@.../node_modules/@zama-fhe/oracle-solidity`
     * If using any other package manager: path to the installed module
     */
    get zamaFheOracleSolidity(): string;
    /**
     * If using npm:
     * - Returns `/path/to/user-package/node_modules/@zama-fhe/oracle-solidity/address`
     * If using pnpm (strict no hoist):
     * - Returns `/path/to/user-package/node_modules/.pnpm/@zama-fhe+oracle-solidity@...@...@.../node_modules/@zama-fhe/oracle-solidity/address`
     * If using any other package manager: path to the installed module
     */
    get zamaFheOracleSolidityAddress(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/@zama-fhe/oracle-solidity`
     */
    get cacheZamaFheOracleSolidity(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/@zama-fhe/oracle-solidity/address`
     */
    get cacheZamaFheOracleSolidityAddress(): string;
    /**
     * Returns `/path/to/user-package/fhevmTemp/@zama-fhe/oracle-solidity/address/ZamaOracleAddress.sol`
     */
    get cacheZamaOracleAddressSol(): string;
    /**
     * Returns:
     * - Unix: `fhevmTemp/@zama-fhe/oracle-solidity/address`
     * - Windows: `fhevmTemp\@zama-fhe\oracle-solidity\address`
     */
    get relCacheZamaFheOracleSolidityAddress(): string;
    /**
     * Returns `fhevmTemp/@zama-fhe/oracle-solidity/address` (in Unix format)
     */
    get relCacheZamaFheOracleSolidityAddressUnix(): string;
    /**
     * The returned path can be one of the following:
     *   - `/path/to/user-package/artifacts/@fhevm/core-contracts`
     *   - `@fhevm/core-contracts/artifacts`
     */
    resolveFhevmCoreContractsArtifactRootDir(): string;
    /**
     * The returned path can be one of the following:
     *   - `/path/to/user-package/artifacts/@zama-fhe/oracle-solidity`
     *   - `@zama-fhe/oracle-solidity/artifacts`
     */
    resolveZamaFheOracleSolidityArtifactRootDir(): string;
    /**
     * The returned path can be one of the following:
     *   - `/path/to/user-package/artifacts/@fhevm/core-contracts/<contractName>.sol/<contractName>.json`
     *   - `@fhevm/core-contracts/artifacts/contracts/<contractName>.sol/<contractName>.json`
     */
    resolveFhevmCoreContractsArtifactPath(contractName: FhevmCoprocessorContractName): string;
    /**
     * The returned path can be one of the following:
     *   - `/path/to/user-package/artifacts/@zama-fhe/oracle-solidity/<contractName>.sol/<contractName>.json`
     *   - `@zama-fhe/oracle-solidity/artifacts/contracts/<contractName>.sol/<contractName>.json`
     */
    resolveZamaFheOracleSolidityArtifactPath(contractName: FhevmDecryptionOracleContractName): string;
    getFhevmCoreContractsArtifact(contractName: FhevmCoprocessorContractName): Promise<{
        artifact: any;
        path: string;
    }>;
    getZamaFheOracleSolidityArtifact(contractName: FhevmDecryptionOracleContractName): Promise<{
        artifact: any;
        path: string;
    }>;
    getMockUtilsVersion(): string | undefined;
    getBundledMockUtilsVersion(): string | undefined;
    private _checkMockUtilsVersions;
    private _resolveFromConsumer;
}
export declare function resolveFromConsumer(modulePathId: string, basedir: string): string;
//# sourceMappingURL=FhevmEnvironmentPaths.d.ts.map