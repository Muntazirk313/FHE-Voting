import { ethers as EthersT } from "ethers";
import { HardhatRuntimeEnvironment } from "hardhat/types";
export declare function getGatewayChainId(): number;
export declare function getRelayerUrl(): string;
export declare function getRelayerSignerAddress(hre: HardhatRuntimeEnvironment): Promise<string>;
export declare function getRelayerSigner(hre: HardhatRuntimeEnvironment): Promise<EthersT.Signer>;
export declare function getKMSThreshold(): number;
/**
 * Fhevm Gateway contracts
 * @returns Address of the deployed 'Decryption.sol' contract.
 */
export declare function getGatewayDecryptionAddress(): string;
/**
 * Fhevm Gateway contracts
 * @returns Address of the deployed 'InputVerification.sol' contract.
 */
export declare function getGatewayInputVerificationAddress(): string;
export declare function loadCoprocessorSigners(hre: HardhatRuntimeEnvironment, provider?: EthersT.Provider): Promise<EthersT.Signer[]>;
export declare function loadKMSSigners(hre: HardhatRuntimeEnvironment, provider?: EthersT.Provider): Promise<EthersT.Signer[]>;
export declare function getACLAddress(): string;
export declare function getDecryptionOracleAddress(): string;
export declare function getFHEVMExecutorAddress(): string;
export declare function getInputVerifierAddress(): string;
export declare function getKMSVerifierAddress(): string;
export declare function getHCULimitAddress(): string;
//# sourceMappingURL=addresses.d.ts.map