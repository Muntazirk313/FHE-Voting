{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { CONTRACTS } from \"../config/contracts\";\n// FHE Voting Contract ABI\nconst FHE_VOTING_ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"string\",\n    name: \"title\",\n    type: \"string\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"startTime\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"endTime\",\n    type: \"uint256\"\n  }],\n  name: \"ProposalCreated\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"voter\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"timestamp\",\n    type: \"uint256\"\n  }],\n  name: \"VoteCast\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"yesCount\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"noCount\",\n    type: \"uint256\"\n  }],\n  name: \"VoteCountsMadePublic\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"ProposalEnded\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"string\",\n    name: \"title\",\n    type: \"string\"\n  }, {\n    internalType: \"string\",\n    name: \"description\",\n    type: \"string\"\n  }, {\n    internalType: \"uint256\",\n    name: \"startTime\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"endTime\",\n    type: \"uint256\"\n  }],\n  name: \"createProposal\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"encryptedVote\",\n    type: \"bytes\"\n  }, {\n    internalType: \"bytes\",\n    name: \"proof\",\n    type: \"bytes\"\n  }],\n  name: \"vote\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"endProposal\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"makeVoteCountsPublic\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"getAllProposals\",\n  outputs: [{\n    components: [{\n      internalType: \"uint256\",\n      name: \"id\",\n      type: \"uint256\"\n    }, {\n      internalType: \"string\",\n      name: \"title\",\n      type: \"string\"\n    }, {\n      internalType: \"string\",\n      name: \"description\",\n      type: \"string\"\n    }, {\n      internalType: \"uint256\",\n      name: \"startTime\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"endTime\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bool\",\n      name: \"isActive\",\n      type: \"bool\"\n    }, {\n      internalType: \"bool\",\n      name: \"isPublic\",\n      type: \"bool\"\n    }, {\n      internalType: \"uint256\",\n      name: \"publicYesCount\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"publicNoCount\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct FHEVoting.ProposalInfo[]\",\n    name: \"\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"getProposalInfo\",\n  outputs: [{\n    components: [{\n      internalType: \"uint256\",\n      name: \"id\",\n      type: \"uint256\"\n    }, {\n      internalType: \"string\",\n      name: \"title\",\n      type: \"string\"\n    }, {\n      internalType: \"string\",\n      name: \"description\",\n      type: \"string\"\n    }, {\n      internalType: \"uint256\",\n      name: \"startTime\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"endTime\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bool\",\n      name: \"isActive\",\n      type: \"bool\"\n    }, {\n      internalType: \"bool\",\n      name: \"isPublic\",\n      type: \"bool\"\n    }, {\n      internalType: \"uint256\",\n      name: \"publicYesCount\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"publicNoCount\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct FHEVoting.ProposalInfo\",\n    name: \"\",\n    type: \"tuple\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"voter\",\n    type: \"address\"\n  }],\n  name: \"hasVoted\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"isProposalActive\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }],\n  name: \"getEncryptedVoteCounts\",\n  outputs: [{\n    internalType: \"uint32\",\n    name: \"yesCount\",\n    type: \"uint32\"\n  }, {\n    internalType: \"uint32\",\n    name: \"noCount\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"voter\",\n    type: \"address\"\n  }],\n  name: \"getEncryptedVote\",\n  outputs: [{\n    internalType: \"uint32\",\n    name: \"\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getProposalCount\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"proposalId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"user\",\n    type: \"address\"\n  }],\n  name: \"isProposalCreator\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nexport class FHEVotingContractService {\n  constructor(provider, signer) {\n    this.contract = void 0;\n    this.provider = void 0;\n    this.signer = void 0;\n    this.provider = provider;\n    this.signer = signer;\n    this.contract = new ethers.Contract(CONTRACTS.FHE_VOTING, FHE_VOTING_ABI, signer);\n  }\n\n  // Get contract instance\n  getContractInstance() {\n    return this.contract;\n  }\n\n  // Get proposal count\n  async getProposalCount() {\n    try {\n      const count = await this.contract.getProposalCount();\n      return Number(count);\n    } catch (error) {\n      console.error(\"Error getting proposal count:\", error);\n      throw error;\n    }\n  }\n\n  // Get all proposals\n  async getAllProposals() {\n    try {\n      const proposals = await this.contract.getAllProposals();\n      return proposals;\n    } catch (error) {\n      console.error(\"Error getting all proposals:\", error);\n      throw error;\n    }\n  }\n\n  // Get proposal info by ID\n  async getProposalInfo(proposalId) {\n    try {\n      const proposal = await this.contract.getProposalInfo(proposalId);\n      return proposal;\n    } catch (error) {\n      console.error(\"Error getting proposal info:\", error);\n      throw error;\n    }\n  }\n\n  // Check if user has voted on a proposal\n  async hasVoted(proposalId, userAddress) {\n    try {\n      const hasVoted = await this.contract.hasVoted(proposalId, userAddress);\n      return hasVoted;\n    } catch (error) {\n      console.error(\"Error checking if user has voted:\", error);\n      throw error;\n    }\n  }\n\n  // Check if proposal is active\n  async isProposalActive(proposalId) {\n    try {\n      const isActive = await this.contract.isProposalActive(proposalId);\n      return isActive;\n    } catch (error) {\n      console.error(\"Error checking if proposal is active:\", error);\n      throw error;\n    }\n  }\n\n  // Create a new proposal\n  async createProposal(title, description, startTime, endTime) {\n    try {\n      const tx = await this.contract.createProposal(title, description, startTime, endTime);\n      return tx;\n    } catch (error) {\n      console.error(\"Error creating proposal:\", error);\n      throw error;\n    }\n  }\n\n  // Cast an encrypted vote\n  async vote(proposalId, encryptedVote, proof) {\n    try {\n      const tx = await this.contract.vote(proposalId, encryptedVote, proof);\n      return tx;\n    } catch (error) {\n      console.error(\"Error casting vote:\", error);\n      throw error;\n    }\n  }\n\n  // End a proposal\n  async endProposal(proposalId) {\n    try {\n      const tx = await this.contract.endProposal(proposalId);\n      return tx;\n    } catch (error) {\n      console.error(\"Error ending proposal:\", error);\n      throw error;\n    }\n  }\n\n  // Make vote counts public\n  async makeVoteCountsPublic(proposalId) {\n    try {\n      const tx = await this.contract.makeVoteCountsPublic(proposalId);\n      return tx;\n    } catch (error) {\n      console.error(\"Error making vote counts public:\", error);\n      throw error;\n    }\n  }\n\n  // Get encrypted vote counts\n  async getEncryptedVoteCounts(proposalId) {\n    try {\n      const counts = await this.contract.getEncryptedVoteCounts(proposalId);\n      return [counts[0], counts[1]];\n    } catch (error) {\n      console.error(\"Error getting encrypted vote counts:\", error);\n      throw error;\n    }\n  }\n\n  // Get user's encrypted vote\n  async getEncryptedVote(proposalId, voter) {\n    try {\n      const vote = await this.contract.getEncryptedVote(proposalId, voter);\n      return vote;\n    } catch (error) {\n      console.error(\"Error getting encrypted vote:\", error);\n      throw error;\n    }\n  }\n\n  // Check if user is proposal creator\n  async isProposalCreator(proposalId, user) {\n    try {\n      const isCreator = await this.contract.isProposalCreator(proposalId, user);\n      return isCreator;\n    } catch (error) {\n      console.error(\"Error checking if user is proposal creator:\", error);\n      throw error;\n    }\n  }\n\n  // Listen to proposal creation events\n  onProposalCreated(callback) {\n    this.contract.on(\"ProposalCreated\", (proposalId, title, startTime, endTime) => {\n      callback(Number(proposalId), title, Number(startTime), Number(endTime));\n    });\n  }\n\n  // Listen to vote cast events\n  onVoteCast(callback) {\n    this.contract.on(\"VoteCast\", (proposalId, voter, timestamp) => {\n      callback(Number(proposalId), voter, Number(timestamp));\n    });\n  }\n\n  // Remove all event listeners\n  removeAllListeners() {\n    this.contract.removeAllListeners();\n  }\n}","map":{"version":3,"names":["ethers","CONTRACTS","FHE_VOTING_ABI","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","FHEVotingContractService","constructor","provider","signer","contract","Contract","FHE_VOTING","getContractInstance","getProposalCount","count","Number","error","console","getAllProposals","proposals","getProposalInfo","proposalId","proposal","hasVoted","userAddress","isProposalActive","isActive","createProposal","title","description","startTime","endTime","tx","vote","encryptedVote","proof","endProposal","makeVoteCountsPublic","getEncryptedVoteCounts","counts","getEncryptedVote","voter","isProposalCreator","user","isCreator","onProposalCreated","callback","on","onVoteCast","timestamp","removeAllListeners"],"sources":["/workspaces/FHE-Voting/frontend/src/services/contractService.ts"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { CONTRACTS } from \"../config/contracts\";\nimport { ProposalInfo, ContractService } from \"../types\";\n\n// FHE Voting Contract ABI\nconst FHE_VOTING_ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"title\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startTime\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"timestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"yesCount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"noCount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VoteCountsMadePublic\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalEnded\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"startTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"endTime\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"encryptedVote\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"proof\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"vote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"endProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"makeVoteCountsPublic\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getAllProposals\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"isActive\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"isPublic\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"publicYesCount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"publicNoCount\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FHEVoting.ProposalInfo[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProposalInfo\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"isActive\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"isPublic\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"publicYesCount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"publicNoCount\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct FHEVoting.ProposalInfo\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"isProposalActive\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getEncryptedVoteCounts\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"yesCount\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"noCount\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n    ],\n    name: \"getEncryptedVote\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProposalCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"isProposalCreator\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class FHEVotingContractService implements ContractService {\n  private contract: ethers.Contract;\n  private provider: ethers.JsonRpcApiProvider;\n  private signer: ethers.JsonRpcSigner;\n\n  constructor(provider: ethers.JsonRpcApiProvider, signer: ethers.JsonRpcSigner) {\n    this.provider = provider;\n    this.signer = signer;\n    this.contract = new ethers.Contract(CONTRACTS.FHE_VOTING, FHE_VOTING_ABI, signer);\n  }\n\n  // Get contract instance\n  getContractInstance(): ethers.Contract {\n    return this.contract;\n  }\n\n  // Get proposal count\n  async getProposalCount(): Promise<number> {\n    try {\n      const count = await this.contract.getProposalCount();\n      return Number(count);\n    } catch (error) {\n      console.error(\"Error getting proposal count:\", error);\n      throw error;\n    }\n  }\n\n  // Get all proposals\n  async getAllProposals(): Promise<ProposalInfo[]> {\n    try {\n      const proposals = await this.contract.getAllProposals();\n      return proposals;\n    } catch (error) {\n      console.error(\"Error getting all proposals:\", error);\n      throw error;\n    }\n  }\n\n  // Get proposal info by ID\n  async getProposalInfo(proposalId: number): Promise<ProposalInfo> {\n    try {\n      const proposal = await this.contract.getProposalInfo(proposalId);\n      return proposal;\n    } catch (error) {\n      console.error(\"Error getting proposal info:\", error);\n      throw error;\n    }\n  }\n\n  // Check if user has voted on a proposal\n  async hasVoted(proposalId: number, userAddress: string): Promise<boolean> {\n    try {\n      const hasVoted = await this.contract.hasVoted(proposalId, userAddress);\n      return hasVoted;\n    } catch (error) {\n      console.error(\"Error checking if user has voted:\", error);\n      throw error;\n    }\n  }\n\n  // Check if proposal is active\n  async isProposalActive(proposalId: number): Promise<boolean> {\n    try {\n      const isActive = await this.contract.isProposalActive(proposalId);\n      return isActive;\n    } catch (error) {\n      console.error(\"Error checking if proposal is active:\", error);\n      throw error;\n    }\n  }\n\n  // Create a new proposal\n  async createProposal(\n    title: string,\n    description: string,\n    startTime: number,\n    endTime: number,\n  ): Promise<ethers.ContractTransactionResponse> {\n    try {\n      const tx = await this.contract.createProposal(title, description, startTime, endTime);\n      return tx;\n    } catch (error) {\n      console.error(\"Error creating proposal:\", error);\n      throw error;\n    }\n  }\n\n  // Cast an encrypted vote\n  async vote(proposalId: number, encryptedVote: string, proof: string): Promise<ethers.ContractTransactionResponse> {\n    try {\n      const tx = await this.contract.vote(proposalId, encryptedVote, proof);\n      return tx;\n    } catch (error) {\n      console.error(\"Error casting vote:\", error);\n      throw error;\n    }\n  }\n\n  // End a proposal\n  async endProposal(proposalId: number): Promise<ethers.ContractTransactionResponse> {\n    try {\n      const tx = await this.contract.endProposal(proposalId);\n      return tx;\n    } catch (error) {\n      console.error(\"Error ending proposal:\", error);\n      throw error;\n    }\n  }\n\n  // Make vote counts public\n  async makeVoteCountsPublic(proposalId: number): Promise<ethers.ContractTransactionResponse> {\n    try {\n      const tx = await this.contract.makeVoteCountsPublic(proposalId);\n      return tx;\n    } catch (error) {\n      console.error(\"Error making vote counts public:\", error);\n      throw error;\n    }\n  }\n\n  // Get encrypted vote counts\n  async getEncryptedVoteCounts(proposalId: number): Promise<[ethers.BigNumberish, ethers.BigNumberish]> {\n    try {\n      const counts = await this.contract.getEncryptedVoteCounts(proposalId);\n      return [counts[0], counts[1]];\n    } catch (error) {\n      console.error(\"Error getting encrypted vote counts:\", error);\n      throw error;\n    }\n  }\n\n  // Get user's encrypted vote\n  async getEncryptedVote(proposalId: number, voter: string): Promise<ethers.BigNumberish> {\n    try {\n      const vote = await this.contract.getEncryptedVote(proposalId, voter);\n      return vote;\n    } catch (error) {\n      console.error(\"Error getting encrypted vote:\", error);\n      throw error;\n    }\n  }\n\n  // Check if user is proposal creator\n  async isProposalCreator(proposalId: number, user: string): Promise<boolean> {\n    try {\n      const isCreator = await this.contract.isProposalCreator(proposalId, user);\n      return isCreator;\n    } catch (error) {\n      console.error(\"Error checking if user is proposal creator:\", error);\n      throw error;\n    }\n  }\n\n  // Listen to proposal creation events\n  onProposalCreated(callback: (proposalId: number, title: string, startTime: number, endTime: number) => void) {\n    this.contract.on(\"ProposalCreated\", (proposalId, title, startTime, endTime) => {\n      callback(Number(proposalId), title, Number(startTime), Number(endTime));\n    });\n  }\n\n  // Listen to vote cast events\n  onVoteCast(callback: (proposalId: number, voter: string, timestamp: number) => void) {\n    this.contract.on(\"VoteCast\", (proposalId, voter, timestamp) => {\n      callback(Number(proposalId), voter, Number(timestamp));\n    });\n  }\n\n  // Remove all event listeners\n  removeAllListeners() {\n    this.contract.removeAllListeners();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}